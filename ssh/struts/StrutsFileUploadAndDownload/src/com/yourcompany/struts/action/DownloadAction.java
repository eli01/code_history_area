/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.yourcompany.struts.action;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.yourcompany.domin.RegisterInfo;
import com.yourcompany.service.RegistService;

/** 
 * MyEclipse Struts
 * Creation date: 07-18-2013
 * 
 * XDoclet definition:
 * @struts.action
 */
public class DownloadAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		/*获得username*/
		try {
			request.setCharacterEncoding("utf-8");
		} catch (UnsupportedEncodingException e2) {
			// TODO Auto-generated catch block
			System.out.println("中文乱码！");
			e2.printStackTrace();
		}
		String name=request.getParameter("username");
		System.out.println("username"+name);
		try {
			name=java.net.URLEncoder.encode(name,"utf-8");
			System.out.println("重新编码后："+name);
		} catch (UnsupportedEncodingException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		RegistService rs=new RegistService();
		/*获得domin对象*/
		RegisterInfo ri=rs.getRI(name);
		response.setContentType("text/html;charset=utf-8");
		/*为了防止中文乱码，对图片名进行重新编码*/
		String reenconding=null;
		try {
			reenconding=java.net.URLEncoder.encode(ri.getPhoto(),"utf-8");
		} catch (UnsupportedEncodingException e1) {
			System.out.println("重新编码异常！");
			e1.printStackTrace();
		}
		/*设置一个头告诉浏览器有文件要下载*/
		response.setHeader("Content-Disposition", "attachment;filename="+reenconding);
		/*完成下载*/
		//1.现获取要下载文件的绝对路径
		String filespath=this.getServlet().getServletContext().getRealPath("/files");
		String filepath=filespath+"\\"+ri.getPhotouuid();//文件的全路径
		//2.创建输入流
		FileInputStream fis=null;
		OutputStream os=null;
		byte[] buffer=new byte[1024];//创建缓存
		int len=0;
		try {
			 fis=new FileInputStream(filepath);//创建输入流
			 os=response.getOutputStream();//创建输出流 
			 while((len=fis.read())>1){
				 /*一点一点写回浏览器*/
				 os.write(buffer, 0, len);
			 }
		} catch (Exception e) {
			// TODO: handle exception
		}finally{
			try {
				os.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			try {
				fis.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return mapping.findForward("downover");
	}
}