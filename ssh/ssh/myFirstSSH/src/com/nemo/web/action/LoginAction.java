/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.nemo.web.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;

import com.nemo.domain.Employee;
import com.nemo.service.interfaces.EmployeeServiceInterface;
import com.nemo.web.form.EmployeeForm;

/** 
 * MyEclipse Struts
 * Creation date: 07-31-2013
 * 
 * XDoclet definition:
 * @struts.action path="/login" name="employeeForm" parameter="flag" scope="request"
 */
public class LoginAction extends DispatchAction {
	private EmployeeServiceInterface employeeServiceInterface;
	
	public void setEmployeeServiceInterface(
			EmployeeServiceInterface employeeServiceInterface) {
		System.out.println("方法setEmployeeServiceInterfa被调用，employeeService被实例化");
		this.employeeServiceInterface = employeeServiceInterface;
	}
	/*响应重新进入主界面请求*/
	public ActionForward goMainFrame(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		//没有对身份验证![过滤器]
		
		if(request.getSession().getAttribute("userinfo")!=null){
		
			return mapping.findForward("ok");
		}else{
			return mapping.findForward("err");
		}
		
	}
	/*响应登录请求*/
	public ActionForward login(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		EmployeeForm employeeForm = (EmployeeForm) form;// TODO Auto-generated method stub
		/*通过下面的语句，可以直接获取spring容器实例，即我们前面讲的ApplicationContext*/
		/*从下面的代码可以看出实例化的spring容器被放在了ServletContext中*/
		//WebApplicationContext wac=WebApplicationContextUtils.getWebApplicationContext(this.getServlet().getServletContext());
		/*从spring容器中获取bean*/
		//EmployeeServiceInterface employeeServiceInterface=(EmployeeServiceInterface)wac.getBean("employeeService");
		/*构建一个Employee*/
		Employee employee=new Employee();
		/*初始化employee*/
		employee.setId(Integer.parseInt(employeeForm.getId()));
		employee.setPwd(employeeForm.getPwd());
		/*验证*/
		employee=employeeServiceInterface.checkEmployee(employee);
		if(employee!=null){
			request.setAttribute("userinfo", employee);
			return mapping.findForward("ok");
		}else{
			return mapping.findForward("err");
		}
		
	}
}